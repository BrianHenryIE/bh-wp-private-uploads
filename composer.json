{
    "name": "brianhenryie/bh-wp-private-uploads",
    "description": "This is a short description of what plugin_title does.",
    "type": "library",
    "license": "GPL-2.0-or-later",
    "authors": [
        {
            "name": "BrianHenryIE",
            "email": "BrianHenryIE@gmail.com"
        },
        {
            "name": "Chris Dennis",
            "email": "cgdennis@btinternet.com"
        }
    ],
    "minimum-stability": "dev",
    "prefer-stable": true,
    "config": {
        "process-timeout": 0,
        "sort-packages": true,
        "allow-plugins": {
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "cweagans/composer-patches": true,
            "phpstan/extension-installer": true,
            "composer/installers": true,
            "brianhenryie/composer-fallback-to-git": true,
            "brianhenryie/composer-phpstorm": true
        }
    },
    "autoload": {
        "classmap": [
            "src/",
            "assets/"
        ],
        "files": [
            "src/functions.php"
        ]
    },
    "repositories": {
        "outlandishideas/wpackagist": {
            "type": "composer",
            "url": "https://wpackagist.org"
        },
        "wordpress/wordpress": {
            "url": "https://github.com/WordPress/wordpress-develop",
            "type": "git"
        }
    },
    "require": {
        "php": ">=7.4",
        "ext-fileinfo": "*",
        "psr/log": "^1.0.0",
        "wptrt/admin-notices": "^1.0"
    },
    "require-dev": {
        "ext-json": "*",
        "10up/wp_mock": "^1.0",
        "alleyinteractive/wordpress-autoloader": "^1.1",
        "antecedent/patchwork": "^2.1",
        "brianhenryie/bh-wp-logger": "dev-master",
        "brianhenryie/color-logger": "^1.0",
        "brianhenryie/composer-fallback-to-git": "*",
        "brianhenryie/composer-phpstorm": "dev-master",
        "codeception/module-asserts": "^1.0",
        "codeception/module-cli": "^1.0",
        "codeception/module-db": "^1.0.0",
        "codeception/module-filesystem": "^1.0",
        "codeception/module-phpbrowser": "^1.0.0",
        "codeception/module-webdriver": "^1.0",
        "codeception/util-universalframework": "^1.0",
        "cweagans/composer-patches": "*",
        "dealerdirect/phpcodesniffer-composer-installer": "*",
        "jaschilz/php-coverage-badger": "^2.0",
        "kporras07/composer-symlinks": "dev-master",
        "lucatume/wp-browser": "^3.2",
        "phpcompatibility/phpcompatibility-wp": "^2.1",
        "phpstan/extension-installer": "^1.3",
        "phpunit/phpcov": "*",
        "squizlabs/php_codesniffer": "*",
        "szepeviktor/phpstan-wordpress": "^1.3",
        "wordpress/wordpress": "*",
        "wp-cli/dist-archive-command": "dev-main",
        "wp-cli/handbook": "dev-main",
        "wp-cli/wp-cli-bundle": "*",
        "wp-coding-standards/wpcs": "^3.0",
        "wpackagist-plugin/debug-log-manager": "*",
        "wpackagist-plugin/document-generator-for-openapi": "*",
        "wpackagist-plugin/monkeyman-rewrite-analyzer": "*",
        "wpackagist-plugin/query-monitor": "*",
        "wpackagist-plugin/woocommerce": "*",
        "wpackagist-plugin/wp-rest-api-log": "*",
        "wpackagist-theme/twentytwenty": "*"
    },
    "extra": {
        "patches": {
            "jaschilz/php-coverage-badger": {
                "Allow customising the text": "https://github.com/JASchilz/PHPCoverageBadge/pull/1.patch"
            },
            "wp-cli/handbook": {
                "Add wp handbook gen-custom for custom commands": "https://github.com/wp-cli/handbook/pull/526.patch"
            }
        },
        "symlinks": {},
        "phpstorm": {
            "exclude_folders": {
                "folders": [
                    "vendor/wordpress/wordpress/src",
                    "vendor/wordpress/wordpress/build",
                    "wp-content/plugins/bh-wp-private-uploads-test-plugin",
                    "wordpress/wp-content"
                ],
                "include_folders": [
                    "vendor/wordpress/wordpress/"
                ],
                "composer-symlinks": false
            }
        }
    },
    "scripts": {
        "post-install-cmd": [
            "@create-symlinks",
            "rm -rf wordpress/wp-content",
            "@sync-composer-wpenv"
        ],
        "post-update-cmd": [
            "@create-symlinks",
            "rm -rf wordpress/wp-content",
            "@sync-composer-wpenv"
        ],
        "create-symlinks": [
            "Kporras07\\ComposerSymlinks\\ScriptHandler::createSymlinks"
        ],
        "test": [
            "codecept run unit",
            "codecept run wpunit"
        ],
        "test-coverage": [
            "vendor/bin/codecept run unit --coverage unit.cov",
            "vendor/bin/codecept run wpunit --coverage wpunit.cov",
            "vendor/bin/phpcov merge --clover tests/_output/clover.xml --html tests/_output/html tests/_output;",
            "open tests/_output/html/index.html"
        ],
        "cs-fix": [
            "vendor/bin/phpcbf || true",
            "vendor/bin/phpcs || true",
            "vendor/bin/phpstan analyse --memory-limit 2G"
        ],
        "cs-fix-changes": [
            "updated_files=$( git status | grep 'modified:\\s.*.php$' | cut -c14- | awk '{ printf(\"%s \", $0) }' ); vendor/bin/phpcbf $(echo $updated_files); vendor/bin/phpcs $(echo $updated_files); vendor/bin/phpstan analyse $(echo $updated_files) --memory-limit 2G"
        ],
        "create-plugin-archive": [
            "vendor/bin/wp i18n make-pot src languages/$(basename \"$PWD\").pot --domain=$(basename \"$PWD\")",
            "vendor/bin/wp dist-archive . ./dist-archive --plugin-dirname=$(basename \"$PWD\") --create-target-dir"
        ],
        "github-actions": [
            "act -P ubuntu-latest=shivammathur/node:latest"
        ],
        "sync-composer-wpenv": [
            "find wp-content/plugins -type d -depth 1 ! -type l | sort -h | jq -Rn '[inputs]' | jq 'reduce .[] as $item ({}; . + {$item:$item})' | jq '.[] |= \"./\\(.)\"' | jq '. | {mappings: .}' | jq --sort-keys -s '.[] * $existing[]' --slurpfile existing .wp-env.json | sponge .wp-env.json ",
            "for name in $(cat .wp-env.json | jq '.mappings | values[]' | sed -r 's/^\\\"|\\\"$//g'); do [ ! -d $name ] && [ ! -f $name ] && echo $name && jq 'del(.. | select(. ==\"'$name'\"))' .wp-env.json | sponge .wp-env.json; done; exit 0;"
        ],
        "generate-openapi": [
            "npx wp-env run cli /var/www/html/wp-content/plugins/example-plugin/vendor/bin/wp openapi-generator export-file example-plugin/v1 --destination=./openapi/example-plugin-openapi.json --extract-common-types;",
            "cat ./openapi/example-plugin-openapi.json | jq 'del(.servers) | del(.paths.\"/\") | .jsonSchemaDialect = \"https://spec.openapis.org/oas/3.1/dialect/base\"' | sponge ./openapi/example-plugin-openapi.json"
        ],
        "generate-wp-cli-docs": [
            "npx wp-env run cli /var/www/html/wp-content/plugins/example-plugin/vendor/bin/wp handbook gen-custom example-plugin --output_dir=docs/wp-cli;",
            "rm -rf docs/wp-cli/example-plugin/logger; rm docs/wp-cli/example-plugin/logger.md;"
        ]
    }
}
