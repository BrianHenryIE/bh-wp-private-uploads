{
    "name": "brianhenryie/bh-wp-private-uploads",
    "description": "This is a short description of what plugin_title does.",
    "type": "library",
    "license": "GPL-2.0+-or-later",
    "authors": [
        {
            "name": "BrianHenryIE",
            "email": "BrianHenryIE@gmail.com"
        },
        {
            "name": "Chris Dennis",
            "email": "cgdennis@btinternet.com"
        }
    ],
    "minimum-stability": "dev",
    "prefer-stable": true,
    "config": {
        "process-timeout": 0,
        "sort-packages": true,
        "allow-plugins": {
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "cweagans/composer-patches": true,
            "phpstan/extension-installer": true,
            "composer/installers": true
        }
    },
    "autoload": {
        "classmap": [
            "src/"
        ]
    },
    "autoload-dev": {
        "classmap": [
            "test-plugin/"
        ]
    },
    "repositories": [
        {
            "url": "https://github.com/WordPress/wordpress-develop",
            "type": "git"
        },
        {
            "url": "https://github.com/BrianHenryIE/composer-phpstorm",
            "type": "git"
        },
        {
            "url": "https://github.com/BrianHenryIE/admin-notices",
            "type": "git"
        },
        {
            "type":"composer",
            "url":"https://wpackagist.org"
        },
        {
            "url": "https://github.com/BrianHenryIE/bh-wp-logger",
            "type": "git"
        }
    ],
    "require": {
        "ext-fileinfo": "*",
        "php": ">=7.4",
        "psr/log": "^1.0.0",
        "wptrt/admin-notices": "dev-merged"
    },
    "require-dev": {
        "10up/wp_mock": "0.4.2",
        "antecedent/patchwork": "^2.1",
        "brianhenryie/color-logger": "^1.0",
        "brianhenryie/bh-wp-logger": "dev-master",
        "brianhenryie/composer-phpstorm": "dev-master",
        "brianhenryie/strauss": "*",
        "codeception/module-asserts": "^1.0",
        "codeception/module-cli": "^1.0",
        "codeception/module-db": "^1.0.0",
        "codeception/module-filesystem": "^1.0",
        "codeception/module-phpbrowser": "^1.0.0",
        "codeception/module-webdriver": "^1.0",
        "codeception/util-universalframework": "^1.0",
        "cweagans/composer-patches": "*",
        "dealerdirect/phpcodesniffer-composer-installer": "*",
        "jaschilz/php-coverage-badger": "^2.0",
        "kporras07/composer-symlinks": "dev-master",
        "lucatume/wp-browser": "*",
        "pablo-sg-pacheco/wp-namespace-autoloader": "*",
        "phpcompatibility/phpcompatibility-wp": "*",
        "phpstan/extension-installer": "^1.1",
        "phpunit/phpcov": "*",
        "squizlabs/php_codesniffer": "*",
        "szepeviktor/phpstan-wordpress": "^0.7.2",
        "voku/portable-ascii": "dev-master",
        "wordpress/wordpress": "*",
        "wp-cli/wp-cli-bundle": "*",
        "wp-cli/dist-archive-command": "dev-master",
        "wp-coding-standards/wpcs": "*",
        "wpackagist-theme/twentytwenty": "*"
    },
    "extra": {
        "patches": {
            "jaschilz/php-coverage-badger": {
                "Allow customising the text": "https://github.com/JASchilz/PHPCoverageBadge/pull/1.patch"
            },
            "10up/wp_mock": {
                "Add AnyObject matcher": "https://github.com/BrianHenryIE/wp_mock/pull/1.patch"
            }
        },
        "symlinks": {
            "wp-content": "wordpress/wp-content",
            "test-plugin": "wp-content/plugins/bh-wp-private-uploads-test-plugin"
        },
        "phpstorm": {
            "exclude_folders": {
                "folders": [
                    "vendor/wordpress/wordpress/src",
                    "vendor/wordpress/wordpress/build",
                    "wp-content/plugins/bh-wp-private-uploads-test-plugin",
                    "wordpress/wp-content"
                ],
                "include_folders": [
                    "vendor/wordpress/wordpress/"
                ],
                "composer-symlinks": false
            }
        }
    },
    "scripts": {
        "post-install-cmd": [
            "vendor/bin/wp core download --path=wordpress --allow-root || true;",
            "export $(grep -v '^#' .env.testing | xargs); vendor/bin/wp config create --dbname=$TEST_SITE_DB_NAME --dbuser=$TEST_SITE_DB_USER --dbpass=$TEST_SITE_DB_PASSWORD --allow-root --extra-php=\"define( 'WP_DEBUG', true ); define( 'WP_DEBUG_LOG', true );\" || true",
            "Kporras07\\ComposerSymlinks\\ScriptHandler::createSymlinks",
            "mkdir -p wordpress/wp-content/uploads",
            "BrianHenryIE\\ComposerPhpStorm\\ExcludeFolders::update",
            "BrianHenryIE\\ComposerPhpStorm\\PHPUnitRunConfigurations::update"
        ],
        "post-update-cmd": [
            "vendor/bin/wp core download --path=wordpress --allow-root || true; wp core update --allow-root || true",
            "export $(grep -v '^#' .env.testing | xargs); vendor/bin/wp config create --dbname=$TEST_SITE_DB_NAME --dbuser=$TEST_SITE_DB_USER --dbpass=$TEST_SITE_DB_PASSWORD --allow-root --extra-php=\"define( 'WP_DEBUG', true ); define( 'WP_DEBUG_LOG', true );\" || true",
            "Kporras07\\ComposerSymlinks\\ScriptHandler::createSymlinks",
            "mkdir -p wordpress/wp-content/uploads",
            "BrianHenryIE\\ComposerPhpStorm\\ExcludeFolders::update",
            "BrianHenryIE\\ComposerPhpStorm\\PHPUnitRunConfigurations::update"
        ],
        "save-acceptance-database": [
            "export $(grep -v '^#' .env.testing | xargs); mysqldump -u $TEST_SITE_DB_USER -p$TEST_SITE_DB_PASSWORD  $TEST_SITE_DB_NAME > tests/_data/dump.sql;"
        ],
        "coverage-tests": [
            "vendor/bin/codecept run unit --coverage unit.cov",
            "vendor/bin/codecept run wpunit --coverage wpunit.cov",
            "vendor/bin/phpcov merge --clover tests/_output/clover.xml --html tests/_output/html tests/_output;",
            "open tests/_output/html/index.html"
        ],
        "lint": [
            "vendor/bin/phpcbf || true",
            "vendor/bin/phpcs || true",
            "vendor/bin/phpstan analyse --memory-limit 1G"
        ],
        "lint-changes": [
            "updated_files=$( git status | grep 'modified:\\s.*.php$' | cut -c14- | awk '{ printf(\"%s \", $0) }' ); vendor/bin/phpcbf $(echo $updated_files); vendor/bin/phpcs $(echo $updated_files); vendor/bin/phpstan analyse $(echo $updated_files) --memory-limit 1G"
        ]
    }
}
